{"ast":null,"code":"var _jsxFileName = \"/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/src/App.js\";\nimport React from 'react';\nimport data from './cities';\nimport admin from 'firebase-admin';\nimport DB_CONFIG from './Config';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.writeUserData = () => {\n      console.log(this.state);\n      var usersRef = this.ref.child(\"users\");\n      let userData = {};\n      let key = this.state.email;\n      userData.key = key;\n      let details = {\n        \"city\": this.state.city,\n        \"longitude\": this.state.longitude,\n        \"latitude\": this.state.latitude\n      };\n      userData.key.push(details);\n      console.log(JSON.stringify(userData)); // usersRef.set({\n      // \"{this.state.email}\": {\n      //         date_of_birth: \"June 23, 1912\",\n      //         full_name: \"Alan Turing\"\n      //     }\n      // });\n\n      console.log(\"Data Saved!\");\n    };\n\n    this.getUserData = () => {// let ref = Firebase.database().ref(\"/\");\n      // ref.on(\"value\", snapshot => {\n      //     const state = snapshot.val();\n      //     this.setState(state);\n      // });\n    };\n\n    this.selectHandleChange = event => {\n      let str = event.target.value;\n      let match = str.split(',');\n      console.log(match);\n      this.setState({\n        city: match[0],\n        longitude: match[1],\n        latitude: match[2]\n      });\n    };\n\n    this.db = admin.database();\n    this.ref = this.db.ref(\"klaviyo\");\n    this.state = {\n      email: \"\",\n      city: \"\",\n      longitude: \"\",\n      latitude: \"\"\n    };\n    this.emailIsValid = this.emailIsValid.bind(this);\n    this.subscribeUser = this.subscribeUser.bind(this);\n  }\n\n  componentDidMount() {\n    let dropdown = document.getElementById('dropdown');\n    dropdown.length = 0;\n    let defaultOption = document.createElement('option');\n    defaultOption.text = 'Choose City';\n    dropdown.add(defaultOption);\n    dropdown.selectedIndex = 0;\n    let option;\n\n    for (let i = 0; i < data.length; i++) {\n      option = document.createElement('option');\n      option.text = data[i].city;\n      option.value = [data[i].city, data[i].latitude, data[i].longitude];\n      dropdown.add(option);\n    }\n\n    this.getUserData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      id: \"dropdown\",\n      onChange: this.selectHandleChange,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      onClick: this.subscribeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Subscribe\"));\n  }\n\n  async subscribeUser() {\n    if (document.getElementById(\"inputEmail\").value) {\n      await this.setState({\n        email: document.getElementById(\"inputEmail\").value\n      });\n      this.writeUserData();\n    }\n  }\n\n  emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/src/App.js"],"names":["React","data","admin","DB_CONFIG","App","Component","constructor","props","writeUserData","console","log","state","usersRef","ref","child","userData","key","email","details","city","longitude","latitude","push","JSON","stringify","getUserData","selectHandleChange","event","str","target","value","match","split","setState","db","database","emailIsValid","bind","subscribeUser","componentDidMount","dropdown","document","getElementById","length","defaultOption","createElement","text","add","selectedIndex","option","i","render","test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,aAhBmB,GAgBH,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,UAAIC,QAAQ,GAAG,KAAKC,GAAL,CAASC,KAAT,CAAe,OAAf,CAAf;AAEA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,GAAG,GAAG,KAAKL,KAAL,CAAWM,KAArB;AAEAF,MAAAA,QAAQ,CAACC,GAAT,GAAeA,GAAf;AACA,UAAIE,OAAO,GAAG;AACV,gBAAQ,KAAKP,KAAL,CAAWQ,IADT;AAEV,qBAAa,KAAKR,KAAL,CAAWS,SAFd;AAGV,oBAAY,KAAKT,KAAL,CAAWU;AAHb,OAAd;AAMAN,MAAAA,QAAQ,CAACC,GAAT,CAAaM,IAAb,CAAkBJ,OAAlB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACC,SAAL,CAAeT,QAAf,CAAZ,EAfkB,CAiBlB;AACA;AACA;AACA;AACA;AACA;;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAxCkB;;AAAA,SA0CnBe,WA1CmB,GA0CL,MAAM,CAChB;AACA;AACA;AACA;AACA;AACH,KAhDkB;;AAAA,SAwGnBC,kBAxGmB,GAwGGC,KAAD,IAAW;AAC5B,UAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAvB;AACA,UAAIC,KAAK,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAZ;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ;AACA,WAAKE,QAAL,CAAc;AAACd,QAAAA,IAAI,EAAEY,KAAK,CAAC,CAAD,CAAZ;AAAiBX,QAAAA,SAAS,EAAEW,KAAK,CAAC,CAAD,CAAjC;AAAsCV,QAAAA,QAAQ,EAAEU,KAAK,CAAC,CAAD;AAArD,OAAd;AACH,KA7GkB;;AAEf,SAAKG,EAAL,GAAUhC,KAAK,CAACiC,QAAN,EAAV;AACA,SAAKtB,GAAL,GAAW,KAAKqB,EAAL,CAAQrB,GAAR,CAAY,SAAZ,CAAX;AAEA,SAAKF,KAAL,GAAa;AACTM,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAMA,SAAKe,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAqCDE,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,MAAT,GAAkB,CAAlB;AAEA,QAAIC,aAAa,GAAGH,QAAQ,CAACI,aAAT,CAAuB,QAAvB,CAApB;AACAD,IAAAA,aAAa,CAACE,IAAd,GAAqB,aAArB;AAEAN,IAAAA,QAAQ,CAACO,GAAT,CAAaH,aAAb;AACAJ,IAAAA,QAAQ,CAACQ,aAAT,GAAyB,CAAzB;AAEA,QAAIC,MAAJ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjD,IAAI,CAAC0C,MAAzB,EAAiCO,CAAC,EAAlC,EAAsC;AAClCD,MAAAA,MAAM,GAAGR,QAAQ,CAACI,aAAT,CAAuB,QAAvB,CAAT;AACAI,MAAAA,MAAM,CAACH,IAAP,GAAc7C,IAAI,CAACiD,CAAD,CAAJ,CAAQ/B,IAAtB;AACA8B,MAAAA,MAAM,CAACnB,KAAP,GAAe,CAAC7B,IAAI,CAACiD,CAAD,CAAJ,CAAQ/B,IAAT,EAAelB,IAAI,CAACiD,CAAD,CAAJ,CAAQ7B,QAAvB,EAAiCpB,IAAI,CAACiD,CAAD,CAAJ,CAAQ9B,SAAzC,CAAf;AACAoB,MAAAA,QAAQ,CAACO,GAAT,CAAaE,MAAb;AACH;;AAED,SAAKxB,WAAL;AACH;;AAED0B,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AAAiD,MAAA,EAAE,EAAC,UAApD;AACQ,MAAA,QAAQ,EAAE,KAAKzB,kBADvB;AAEQ,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWQ,IAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFJ,EAYI;AAAQ,MAAA,SAAS,EAAC,kCAAlB;AAAqD,MAAA,IAAI,EAAC,QAA1D;AACQ,MAAA,OAAO,EAAE,KAAKmB,aADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,CADJ;AAkBH;;AAED,QAAMA,aAAN,GAAsB;AAClB,QAAIG,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCZ,KAA1C,EAAiD;AAC7C,YAAM,KAAKG,QAAL,CAAc;AAAChB,QAAAA,KAAK,EAAEwB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCZ;AAA9C,OAAd,CAAN;AACA,WAAKtB,aAAL;AACH;AACJ;;AAED4B,EAAAA,YAAY,CAACnB,KAAD,EAAQ;AAChB,WAAO,6BAA6BmC,IAA7B,CAAkCnC,KAAlC,CAAP;AACH;;AAxG6B;;AAkHlC,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport data from './cities';\nimport admin from 'firebase-admin';\nimport DB_CONFIG from './Config';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.db = admin.database();\n        this.ref = this.db.ref(\"klaviyo\");\n\n        this.state = {\n            email: \"\",\n            city: \"\",\n            longitude: \"\",\n            latitude: \"\"\n        };\n        this.emailIsValid = this.emailIsValid.bind(this);\n        this.subscribeUser = this.subscribeUser.bind(this);\n    }\n\n\n    writeUserData = () => {\n        console.log(this.state);\n        var usersRef = this.ref.child(\"users\");\n\n        let userData = {};\n        let key = this.state.email;\n\n        userData.key = key;\n        let details = {\n            \"city\": this.state.city,\n            \"longitude\": this.state.longitude,\n            \"latitude\": this.state.latitude\n        };\n\n        userData.key.push(details);\n        console.log(JSON.stringify(userData));\n\n        // usersRef.set({\n        // \"{this.state.email}\": {\n        //         date_of_birth: \"June 23, 1912\",\n        //         full_name: \"Alan Turing\"\n        //     }\n        // });\n        console.log(\"Data Saved!\");\n    };\n\n    getUserData = () => {\n        // let ref = Firebase.database().ref(\"/\");\n        // ref.on(\"value\", snapshot => {\n        //     const state = snapshot.val();\n        //     this.setState(state);\n        // });\n    };\n\n    componentDidMount() {\n        let dropdown = document.getElementById('dropdown');\n        dropdown.length = 0;\n\n        let defaultOption = document.createElement('option');\n        defaultOption.text = 'Choose City';\n\n        dropdown.add(defaultOption);\n        dropdown.selectedIndex = 0;\n\n        let option;\n\n        for (let i = 0; i < data.length; i++) {\n            option = document.createElement('option');\n            option.text = data[i].city;\n            option.value = [data[i].city, data[i].latitude, data[i].longitude];\n            dropdown.add(option);\n        }\n\n        this.getUserData();\n    }\n\n    render() {\n        return (\n            <div>\n\n                <div className=\"form-label-group\">\n                    <div className=\"dropdown show\">\n                        <select className=\"form-control form-control-lg\" id=\"dropdown\"\n                                onChange={this.selectHandleChange}\n                                value={this.state.city}\n                        >\n                        </select>\n                    </div>\n                </div>\n\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"\n                        onClick={this.subscribeUser}> Subscribe\n                </button>\n            </div>\n        );\n    }\n\n    async subscribeUser() {\n        if (document.getElementById(\"inputEmail\").value) {\n            await this.setState({email: document.getElementById(\"inputEmail\").value});\n            this.writeUserData();\n        }\n    }\n\n    emailIsValid(email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    selectHandleChange = (event) => {\n        let str = event.target.value;\n        let match = str.split(',');\n        console.log(match);\n        this.setState({city: match[0], longitude: match[1], latitude: match[2]});\n    };\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}