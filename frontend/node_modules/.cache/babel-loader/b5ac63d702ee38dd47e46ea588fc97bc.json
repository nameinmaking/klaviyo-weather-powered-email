{"ast":null,"code":"var _jsxFileName = \"/home/strider/Desktop/github/klaviyo-weather-powered-email/src/App.js\";\nimport React from 'react';\nimport data from './cities';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectHandleChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      city: \"\"\n    };\n    this.emailIsValid = this.emailIsValid.bind(this);\n    this.subscribeUser = this.subscribeUser.bind(this);\n  }\n\n  componentDidMount() {\n    let dropdown = document.getElementById('dropdown');\n    dropdown.length = 0;\n    let defaultOption = document.createElement('option');\n    defaultOption.text = 'Choose City';\n    dropdown.add(defaultOption);\n    dropdown.selectedIndex = 0;\n    let option;\n\n    for (let i = 0; i < data.length; i++) {\n      option = document.createElement('option');\n      option.text = data[i].city;\n      option.value = [data[i].latitude, data[i].longitude];\n      dropdown.add(option);\n    }\n\n    console.log(option);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      id: \"dropdown\",\n      onChange: this.selectHandleChange,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      onClick: this.subscribeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" Subscribe\"));\n  }\n\n  async subscribeUser() {\n    if (document.getElementById(\"inputEmail\").value) {\n      await this.setState({\n        email: document.getElementById(\"inputEmail\").value\n      });\n      alert(this.state.email + this.state.city);\n    }\n  }\n\n  emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/strider/Desktop/github/klaviyo-weather-powered-email/src/App.js"],"names":["React","data","App","Component","constructor","props","selectHandleChange","event","setState","city","target","value","state","email","emailIsValid","bind","subscribeUser","componentDidMount","dropdown","document","getElementById","length","defaultOption","createElement","text","add","selectedIndex","option","i","latitude","longitude","console","log","render","alert","test"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from './cities';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            city: \"\"\n        };\n        this.emailIsValid = this.emailIsValid.bind(this);\n        this.subscribeUser = this.subscribeUser.bind(this);\n    }\n\n    componentDidMount() {\n        let dropdown = document.getElementById('dropdown');\n        dropdown.length = 0;\n\n        let defaultOption = document.createElement('option');\n        defaultOption.text = 'Choose City';\n\n        dropdown.add(defaultOption);\n        dropdown.selectedIndex = 0;\n\n        let option;\n\n        for (let i = 0; i < data.length; i++) {\n            option = document.createElement('option');\n            option.text = data[i].city;\n            option.value = [data[i].latitude, data[i].longitude];\n            dropdown.add(option);\n        }\n\n        console.log(option);\n    }\n\n    render() {\n        return (\n            <div>\n\n                <div className=\"form-label-group\">\n                    <div className=\"dropdown show\">\n                        <select className=\"form-control form-control-lg\" id=\"dropdown\"\n                                onChange={this.selectHandleChange} value={this.state.city}>\n                        </select>\n                    </div>\n                </div>\n\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"\n                        onClick={this.subscribeUser}> Subscribe\n                </button>\n            </div>\n        );\n    }\n\n    async subscribeUser() {\n\n        if (document.getElementById(\"inputEmail\").value) {\n            await this.setState({email: document.getElementById(\"inputEmail\").value});\n            alert(this.state.email + this.state.city);\n        }\n\n    }\n\n    emailIsValid(email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    selectHandleChange = (event) => {\n        this.setState({city: event.target.value});\n    };\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}