{"ast":null,"code":"var _jsxFileName = \"/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/src/App.js\";\nimport React from 'react';\nimport data from './cities';\nimport Firebase from 'firebase';\nimport DB_CONFIG from './Config';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.writeUserData = () => {\n      Firebase.database().ref(\"/\").set(this.state);\n      console.log(\"Data Saved!\");\n    };\n\n    this.getUserData = () => {\n      let ref = Firebase.database().ref(\"/\");\n      ref.on(\"value\", snapshot => {\n        const state = snapshot.val();\n        this.setState(state);\n      });\n    };\n\n    this.selectHandleChange = event => {\n      let str = event.target.value;\n      let match = str.split(',');\n      this.setState({\n        city: match[0],\n        longitude: match[1],\n        latitude: match[2]\n      });\n    };\n\n    Firebase.initializeApp(DB_CONFIG);\n    this.state = {\n      email: \"\",\n      city: \"\",\n      longitude: \"\",\n      latitude: \"\"\n    };\n    this.emailIsValid = this.emailIsValid.bind(this);\n    this.subscribeUser = this.subscribeUser.bind(this);\n  }\n\n  componentDidMount() {\n    let dropdown = document.getElementById('dropdown');\n    dropdown.length = 0;\n    let defaultOption = document.createElement('option');\n    defaultOption.text = 'Choose City';\n    dropdown.add(defaultOption);\n    dropdown.selectedIndex = 0;\n    let option;\n\n    for (let i = 0; i < data.length; i++) {\n      option = document.createElement('option');\n      option.text = data[i].city;\n      option.value = [data[i].city, data[i].latitude, data[i].longitude];\n      dropdown.add(option);\n    }\n\n    this.getUserData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown show\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      id: \"dropdown\",\n      onChange: this.selectHandleChange,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"submit\",\n      onClick: this.subscribeUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Subscribe\"));\n  }\n\n  async subscribeUser() {\n    if (document.getElementById(\"inputEmail\").value) {\n      console.log(\"here\");\n      await this.setState({\n        email: document.getElementById(\"inputEmail\").value\n      });\n      let userData = {};\n      userData.key = this.state.email;\n      let details = {\n        \"city\": this.state.city,\n        \"longitude\": this.state.longitude,\n        \"latitude\": this.state.latitude\n      };\n      userData.key.push(details);\n      alert(JSON.stringify(userData));\n      this.writeUserData();\n    }\n  }\n\n  emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/src/App.js"],"names":["React","data","Firebase","DB_CONFIG","App","Component","constructor","props","writeUserData","database","ref","set","state","console","log","getUserData","on","snapshot","val","setState","selectHandleChange","event","str","target","value","match","split","city","longitude","latitude","initializeApp","email","emailIsValid","bind","subscribeUser","componentDidMount","dropdown","document","getElementById","length","defaultOption","createElement","text","add","selectedIndex","option","i","render","userData","key","details","push","alert","JSON","stringify","test"],"mappings":"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","sourcesContent":["import React from 'react';\nimport data from './cities';\nimport Firebase from 'firebase';\nimport DB_CONFIG from './Config';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        Firebase.initializeApp(DB_CONFIG);\n\n        this.state = {\n            email: \"\",\n            city: \"\",\n            longitude: \"\",\n            latitude: \"\"\n        };\n        this.emailIsValid = this.emailIsValid.bind(this);\n        this.subscribeUser = this.subscribeUser.bind(this);\n    }\n\n\n    writeUserData = () => {\n        Firebase.database()\n            .ref(\"/\")\n            .set(this.state);\n        console.log(\"Data Saved!\");\n    };\n\n    getUserData = () => {\n        let ref = Firebase.database().ref(\"/\");\n        ref.on(\"value\", snapshot => {\n            const state = snapshot.val();\n            this.setState(state);\n        });\n    };\n\n    componentDidMount() {\n        let dropdown = document.getElementById('dropdown');\n        dropdown.length = 0;\n\n        let defaultOption = document.createElement('option');\n        defaultOption.text = 'Choose City';\n\n        dropdown.add(defaultOption);\n        dropdown.selectedIndex = 0;\n\n        let option;\n\n        for (let i = 0; i < data.length; i++) {\n            option = document.createElement('option');\n            option.text = data[i].city;\n            option.value = [data[i].city, data[i].latitude, data[i].longitude];\n            dropdown.add(option);\n        }\n\n        this.getUserData();\n    }\n\n    render() {\n        return (\n            <div>\n\n                <div className=\"form-label-group\">\n                    <div className=\"dropdown show\">\n                        <select className=\"form-control form-control-lg\" id=\"dropdown\"\n                                onChange={this.selectHandleChange}\n                                value={this.state.city}\n                        >\n                        </select>\n                    </div>\n                </div>\n\n                <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\"\n                        onClick={this.subscribeUser}> Subscribe\n                </button>\n            </div>\n        );\n    }\n\n    async subscribeUser() {\n        if (document.getElementById(\"inputEmail\").value) {\n            console.log(\"here\");\n            await this.setState({email: document.getElementById(\"inputEmail\").value});\n            let userData = {};\n            userData.key = this.state.email;\n            let details = {\n                \"city\": this.state.city,\n                \"longitude\": this.state.longitude,\n                \"latitude\": this.state.latitude\n            };\n\n            userData.key.push(details);\n            alert(JSON.stringify(userData));\n            this.writeUserData();\n        }\n    }\n\n    emailIsValid(email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    selectHandleChange = (event) => {\n        let str = event.target.value;\n        let match = str.split(',');\n        this.setState({city: match[0], longitude: match[1], latitude: match[2]});\n    };\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}