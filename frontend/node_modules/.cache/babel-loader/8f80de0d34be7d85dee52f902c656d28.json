{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A Promise implementation that supports deferred resolution.\n * @private\n */\n\nclass Deferred {\n  constructor() {\n    this.resolve = () => {};\n\n    this.reject = () => {};\n\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n\n}\n\nexports.Deferred = Deferred;\n/**\n * Generate a unique client-side identifier.\n *\n * Used for the creation of new documents.\n *\n * @private\n * @returns {string} A unique 20-character wide identifier.\n */\n\nfunction autoId() {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let autoId = '';\n\n  for (let i = 0; i < 20; i++) {\n    autoId += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n\n  return autoId;\n}\n\nexports.autoId = autoId;\n/**\n * Generate a short and semi-random client-side identifier.\n *\n * Used for the creation of request tags.\n *\n * @private\n * @returns {string} A random 5-character wide identifier.\n */\n\nfunction requestTag() {\n  return autoId().substr(0, 5);\n}\n\nexports.requestTag = requestTag;\n/**\n * Determines whether `value` is a JavaScript object.\n *\n * @private\n */\n\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\nexports.isObject = isObject;\n/**\n * Returns whether `value` has no custom properties.\n *\n * @private\n */\n\nfunction isEmpty(value) {\n  return Object.keys(value).length === 0;\n}\n\nexports.isEmpty = isEmpty;\n/**\n * Determines whether `value` is a JavaScript function.\n *\n * @private\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexports.isFunction = isFunction;","map":{"version":3,"sources":["/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/node_modules/@google-cloud/firestore/build/src/util.js"],"names":["Object","defineProperty","exports","value","Deferred","constructor","resolve","reject","promise","Promise","autoId","chars","i","charAt","Math","floor","random","length","requestTag","substr","isObject","prototype","toString","call","isEmpty","keys","isFunction"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;AAeAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;AAIA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe,MAAM,CAAG,CAAxB;;AACA,SAAKC,MAAL,GAAc,MAAM,CAAG,CAAvB;;AACA,SAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAY,CAACH,OAAD,EAAUC,MAAV,KAAqB;AAC5C,WAAKD,OAAL,GAAeA,OAAf;AACA,WAAKC,MAAL,GAAcA,MAAd;AACH,KAHc,CAAf;AAIH;;AARU;;AAUfL,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACA;;;;;;;;;AAQA,SAASM,MAAT,GAAkB;AACd,QAAMC,KAAK,GAAG,gEAAd;AACA,MAAID,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBF,IAAAA,MAAM,IAAIC,KAAK,CAACE,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAAK,CAACM,MAAjC,CAAb,CAAV;AACH;;AACD,SAAOP,MAAP;AACH;;AACDR,OAAO,CAACQ,MAAR,GAAiBA,MAAjB;AACA;;;;;;;;;AAQA,SAASQ,UAAT,GAAsB;AAClB,SAAOR,MAAM,GAAGS,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAP;AACH;;AACDjB,OAAO,CAACgB,UAAR,GAAqBA,UAArB;AACA;;;;;;AAKA,SAASE,QAAT,CAAkBjB,KAAlB,EAAyB;AACrB,SAAOH,MAAM,CAACqB,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BpB,KAA/B,MAA0C,iBAAjD;AACH;;AACDD,OAAO,CAACkB,QAAR,GAAmBA,QAAnB;AACA;;;;;;AAKA,SAASI,OAAT,CAAiBrB,KAAjB,EAAwB;AACpB,SAAOH,MAAM,CAACyB,IAAP,CAAYtB,KAAZ,EAAmBc,MAAnB,KAA8B,CAArC;AACH;;AACDf,OAAO,CAACsB,OAAR,GAAkBA,OAAlB;AACA;;;;;;AAKA,SAASE,UAAT,CAAoBvB,KAApB,EAA2B;AACvB,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACH;;AACDD,OAAO,CAACwB,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A Promise implementation that supports deferred resolution.\n * @private\n */\nclass Deferred {\n    constructor() {\n        this.resolve = () => { };\n        this.reject = () => { };\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexports.Deferred = Deferred;\n/**\n * Generate a unique client-side identifier.\n *\n * Used for the creation of new documents.\n *\n * @private\n * @returns {string} A unique 20-character wide identifier.\n */\nfunction autoId() {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let autoId = '';\n    for (let i = 0; i < 20; i++) {\n        autoId += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return autoId;\n}\nexports.autoId = autoId;\n/**\n * Generate a short and semi-random client-side identifier.\n *\n * Used for the creation of request tags.\n *\n * @private\n * @returns {string} A random 5-character wide identifier.\n */\nfunction requestTag() {\n    return autoId().substr(0, 5);\n}\nexports.requestTag = requestTag;\n/**\n * Determines whether `value` is a JavaScript object.\n *\n * @private\n */\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nexports.isObject = isObject;\n/**\n * Returns whether `value` has no custom properties.\n *\n * @private\n */\nfunction isEmpty(value) {\n    return Object.keys(value).length === 0;\n}\nexports.isEmpty = isEmpty;\n/**\n * Determines whether `value` is a JavaScript function.\n *\n * @private\n */\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"script"}