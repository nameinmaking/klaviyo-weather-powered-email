{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _slicedToArray = require(\"/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*!\n * @module common/service-object\n */\n\nconst promisify_1 = require(\"@google-cloud/promisify\");\n\nconst arrify = require(\"arrify\");\n\nconst events_1 = require(\"events\");\n\nconst extend = require(\"extend\");\n\nconst util_1 = require(\"./util\");\n/**\n * ServiceObject is a base class, meant to be inherited from by a \"service\n * object,\" like a BigQuery dataset or Storage bucket.\n *\n * Most of the time, these objects share common functionality; they can be\n * created or deleted, and you can get or set their metadata.\n *\n * By inheriting from this class, a service object will be extended with these\n * shared behaviors. Note that any method can be overridden when the service\n * object requires specific behavior.\n */\n// tslint:disable-next-line no-any\n\n\nclass ServiceObject extends events_1.EventEmitter {\n  /*\n   * @constructor\n   * @alias module:common/service-object\n   *\n   * @private\n   *\n   * @param {object} config - Configuration object.\n   * @param {string} config.baseUrl - The base URL to make API requests to.\n   * @param {string} config.createMethod - The method which creates this object.\n   * @param {string=} config.id - The identifier of the object. For example, the\n   *     name of a Storage bucket or Pub/Sub topic.\n   * @param {object=} config.methods - A map of each method name that should be inherited.\n   * @param {object} config.methods[].reqOpts - Default request options for this\n   *     particular method. A common use case is when `setMetadata` requires a\n   *     `PUT` method to override the default `PATCH`.\n   * @param {object} config.parent - The parent service instance. For example, an\n   *     instance of Storage if the object is Bucket.\n   */\n  constructor(config) {\n    super();\n    this.metadata = {};\n    this.baseUrl = config.baseUrl;\n    this.parent = config.parent; // Parent class.\n\n    this.id = config.id; // Name or ID (e.g. dataset ID, bucket name, etc).\n\n    this.createMethod = config.createMethod;\n    this.methods = config.methods || {};\n    this.interceptors = [];\n    this.Promise = this.parent ? this.parent.Promise : undefined;\n\n    if (config.methods) {\n      Object.getOwnPropertyNames(ServiceObject.prototype).filter(methodName => {\n        return (// All ServiceObjects need `request`.\n          // clang-format off\n          !/^request/.test(methodName) && // clang-format on\n          // The ServiceObject didn't redefine the method.\n          // tslint:disable-next-line no-any\n          this[methodName] === // tslint:disable-next-line no-any\n          ServiceObject.prototype[methodName] && // This method isn't wanted.\n          !config.methods[methodName]\n        );\n      }).forEach(methodName => {\n        // tslint:disable-next-line no-any\n        this[methodName] = undefined;\n      });\n    }\n  }\n\n  create(optionsOrCallback, callback) {\n    const self = this;\n    const args = [this.id];\n\n    if (typeof optionsOrCallback === 'function') {\n      callback = optionsOrCallback;\n    }\n\n    if (typeof optionsOrCallback === 'object') {\n      args.push(optionsOrCallback);\n    } // Wrap the callback to return *this* instance of the object, not the\n    // newly-created one.\n    // tslint: disable-next-line no-any\n\n\n    function onCreate(...args) {\n      const err = args[0],\n            instance = args[1];\n\n      if (!err) {\n        self.metadata = instance.metadata;\n        args[1] = self; // replace the created `instance` with this one.\n      }\n\n      callback(...args);\n    }\n\n    args.push(onCreate);\n    this.createMethod.apply(null, args);\n  }\n\n  delete(optionsOrCallback, cb) {\n    const _util_1$util$maybeOpt = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb),\n          _util_1$util$maybeOpt2 = _slicedToArray(_util_1$util$maybeOpt, 2),\n          options = _util_1$util$maybeOpt2[0],\n          callback = _util_1$util$maybeOpt2[1];\n\n    const methodConfig = typeof this.methods.delete === 'object' && this.methods.delete || {};\n    const reqOpts = extend(true, {\n      method: 'DELETE',\n      uri: ''\n    }, methodConfig.reqOpts, {\n      qs: options\n    }); // The `request` method may have been overridden to hold any special\n    // behavior. Ensure we call the original `request` method.\n\n    ServiceObject.prototype.request.call(this, reqOpts, callback);\n  }\n\n  exists(optionsOrCallback, cb) {\n    const _util_1$util$maybeOpt3 = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb),\n          _util_1$util$maybeOpt4 = _slicedToArray(_util_1$util$maybeOpt3, 2),\n          options = _util_1$util$maybeOpt4[0],\n          callback = _util_1$util$maybeOpt4[1];\n\n    this.get(options, err => {\n      if (err) {\n        if (err.code === 404) {\n          callback(null, false);\n        } else {\n          callback(err);\n        }\n\n        return;\n      }\n\n      callback(null, true);\n    });\n  }\n\n  get(optionsOrCallback, cb) {\n    const self = this;\n\n    const _util_1$util$maybeOpt5 = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb),\n          _util_1$util$maybeOpt6 = _slicedToArray(_util_1$util$maybeOpt5, 2),\n          opts = _util_1$util$maybeOpt6[0],\n          callback = _util_1$util$maybeOpt6[1];\n\n    const options = Object.assign({}, opts);\n    const autoCreate = options.autoCreate && typeof this.create === 'function';\n    delete options.autoCreate;\n\n    function onCreate(err, instance, apiResponse) {\n      if (err) {\n        if (err.code === 409) {\n          self.get(options, callback);\n          return;\n        }\n\n        callback(err, null, apiResponse);\n        return;\n      }\n\n      callback(null, instance, apiResponse);\n    }\n\n    this.getMetadata(options, (err, metadata) => {\n      if (err) {\n        if (err.code === 404 && autoCreate) {\n          const args = [];\n\n          if (Object.keys(options).length > 0) {\n            args.push(options);\n          }\n\n          args.push(onCreate);\n          self.create(...args);\n          return;\n        }\n\n        callback(err, null, metadata);\n        return;\n      }\n\n      callback(null, self, metadata);\n    });\n  }\n\n  getMetadata(optionsOrCallback, cb) {\n    const _util_1$util$maybeOpt7 = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb),\n          _util_1$util$maybeOpt8 = _slicedToArray(_util_1$util$maybeOpt7, 2),\n          options = _util_1$util$maybeOpt8[0],\n          callback = _util_1$util$maybeOpt8[1];\n\n    const methodConfig = typeof this.methods.getMetadata === 'object' && this.methods.getMetadata || {};\n    const reqOpts = extend(true, {\n      uri: ''\n    }, methodConfig.reqOpts, {\n      qs: options\n    }); // The `request` method may have been overridden to hold any special\n    // behavior. Ensure we call the original `request` method.\n\n    ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n      this.metadata = body;\n      callback(err, this.metadata, res);\n    });\n  }\n\n  setMetadata(metadata, optionsOrCallback, cb) {\n    const _util_1$util$maybeOpt9 = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb),\n          _util_1$util$maybeOpt10 = _slicedToArray(_util_1$util$maybeOpt9, 2),\n          options = _util_1$util$maybeOpt10[0],\n          callback = _util_1$util$maybeOpt10[1];\n\n    const methodConfig = typeof this.methods.setMetadata === 'object' && this.methods.setMetadata || {};\n    const reqOpts = extend(true, {}, {\n      method: 'PATCH',\n      uri: ''\n    }, methodConfig.reqOpts, {\n      json: metadata,\n      qs: options\n    }); // The `request` method may have been overridden to hold any special\n    // behavior. Ensure we call the original `request` method.\n\n    ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n      this.metadata = body;\n      callback(err, this.metadata, res);\n    });\n  }\n\n  request_(reqOpts, callback) {\n    reqOpts = extend(true, {}, reqOpts);\n    const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n    const uriComponents = [this.baseUrl, this.id || '', reqOpts.uri];\n\n    if (isAbsoluteUrl) {\n      uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n    }\n\n    reqOpts.uri = uriComponents.filter(x => x.trim()) // Limit to non-empty strings.\n    .map(uriComponent => {\n      const trimSlashesRegex = /^\\/*|\\/*$/g;\n      return uriComponent.replace(trimSlashesRegex, '');\n    }).join('/');\n    const childInterceptors = arrify(reqOpts.interceptors_);\n    const localInterceptors = [].slice.call(this.interceptors);\n    reqOpts.interceptors_ = childInterceptors.concat(localInterceptors);\n\n    if (reqOpts.shouldReturnStream) {\n      return this.parent.requestStream(reqOpts);\n    }\n\n    this.parent.request(reqOpts, callback);\n  }\n\n  request(reqOpts, callback) {\n    this.request_(reqOpts, callback);\n  }\n  /**\n   * Make an authenticated API request.\n   *\n   * @param {object} reqOpts - Request options that are passed to `request`.\n   * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n   */\n\n\n  requestStream(reqOpts) {\n    const opts = extend(true, reqOpts, {\n      shouldReturnStream: true\n    });\n    return this.request_(opts);\n  }\n\n}\n\nexports.ServiceObject = ServiceObject;\npromisify_1.promisifyAll(ServiceObject);","map":{"version":3,"sources":["/home/strider/Desktop/github/klaviyo-weather-powered-email/frontend/node_modules/@google-cloud/common/build/src/service-object.js"],"names":["Object","defineProperty","exports","value","promisify_1","require","arrify","events_1","extend","util_1","ServiceObject","EventEmitter","constructor","config","metadata","baseUrl","parent","id","createMethod","methods","interceptors","Promise","undefined","getOwnPropertyNames","prototype","filter","methodName","test","forEach","create","optionsOrCallback","callback","self","args","push","onCreate","err","instance","apply","delete","cb","util","maybeOptionsOrCallback","options","methodConfig","reqOpts","method","uri","qs","request","call","exists","get","code","opts","assign","autoCreate","apiResponse","getMetadata","keys","length","body","res","setMetadata","json","request_","isAbsoluteUrl","indexOf","uriComponents","splice","x","trim","map","uriComponent","trimSlashesRegex","replace","join","childInterceptors","interceptors_","localInterceptors","slice","concat","shouldReturnStream","requestStream","promisifyAll"],"mappings":"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","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*!\n * @module common/service-object\n */\nconst promisify_1 = require(\"@google-cloud/promisify\");\nconst arrify = require(\"arrify\");\nconst events_1 = require(\"events\");\nconst extend = require(\"extend\");\nconst util_1 = require(\"./util\");\n/**\n * ServiceObject is a base class, meant to be inherited from by a \"service\n * object,\" like a BigQuery dataset or Storage bucket.\n *\n * Most of the time, these objects share common functionality; they can be\n * created or deleted, and you can get or set their metadata.\n *\n * By inheriting from this class, a service object will be extended with these\n * shared behaviors. Note that any method can be overridden when the service\n * object requires specific behavior.\n */\n// tslint:disable-next-line no-any\nclass ServiceObject extends events_1.EventEmitter {\n    /*\n     * @constructor\n     * @alias module:common/service-object\n     *\n     * @private\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string} config.createMethod - The method which creates this object.\n     * @param {string=} config.id - The identifier of the object. For example, the\n     *     name of a Storage bucket or Pub/Sub topic.\n     * @param {object=} config.methods - A map of each method name that should be inherited.\n     * @param {object} config.methods[].reqOpts - Default request options for this\n     *     particular method. A common use case is when `setMetadata` requires a\n     *     `PUT` method to override the default `PATCH`.\n     * @param {object} config.parent - The parent service instance. For example, an\n     *     instance of Storage if the object is Bucket.\n     */\n    constructor(config) {\n        super();\n        this.metadata = {};\n        this.baseUrl = config.baseUrl;\n        this.parent = config.parent; // Parent class.\n        this.id = config.id; // Name or ID (e.g. dataset ID, bucket name, etc).\n        this.createMethod = config.createMethod;\n        this.methods = config.methods || {};\n        this.interceptors = [];\n        this.Promise = this.parent ? this.parent.Promise : undefined;\n        if (config.methods) {\n            Object.getOwnPropertyNames(ServiceObject.prototype)\n                .filter(methodName => {\n                return (\n                // All ServiceObjects need `request`.\n                // clang-format off\n                !/^request/.test(methodName) &&\n                    // clang-format on\n                    // The ServiceObject didn't redefine the method.\n                    // tslint:disable-next-line no-any\n                    this[methodName] ===\n                        // tslint:disable-next-line no-any\n                        ServiceObject.prototype[methodName] &&\n                    // This method isn't wanted.\n                    !config.methods[methodName]);\n            })\n                .forEach(methodName => {\n                // tslint:disable-next-line no-any\n                this[methodName] = undefined;\n            });\n        }\n    }\n    create(optionsOrCallback, callback) {\n        const self = this;\n        const args = [this.id];\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        if (typeof optionsOrCallback === 'object') {\n            args.push(optionsOrCallback);\n        }\n        // Wrap the callback to return *this* instance of the object, not the\n        // newly-created one.\n        // tslint: disable-next-line no-any\n        function onCreate(...args) {\n            const [err, instance] = args;\n            if (!err) {\n                self.metadata = instance.metadata;\n                args[1] = self; // replace the created `instance` with this one.\n            }\n            callback(...args);\n        }\n        args.push(onCreate);\n        this.createMethod.apply(null, args);\n    }\n    delete(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.delete === 'object' && this.methods.delete) || {};\n        const reqOpts = extend(true, {\n            method: 'DELETE',\n            uri: '',\n        }, methodConfig.reqOpts, {\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, callback);\n    }\n    exists(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        this.get(options, err => {\n            if (err) {\n                if (err.code === 404) {\n                    callback(null, false);\n                }\n                else {\n                    callback(err);\n                }\n                return;\n            }\n            callback(null, true);\n        });\n    }\n    get(optionsOrCallback, cb) {\n        const self = this;\n        const [opts, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const options = Object.assign({}, opts);\n        const autoCreate = options.autoCreate && typeof this.create === 'function';\n        delete options.autoCreate;\n        function onCreate(err, instance, apiResponse) {\n            if (err) {\n                if (err.code === 409) {\n                    self.get(options, callback);\n                    return;\n                }\n                callback(err, null, apiResponse);\n                return;\n            }\n            callback(null, instance, apiResponse);\n        }\n        this.getMetadata(options, (err, metadata) => {\n            if (err) {\n                if (err.code === 404 && autoCreate) {\n                    const args = [];\n                    if (Object.keys(options).length > 0) {\n                        args.push(options);\n                    }\n                    args.push(onCreate);\n                    self.create(...args);\n                    return;\n                }\n                callback(err, null, metadata);\n                return;\n            }\n            callback(null, self, metadata);\n        });\n    }\n    getMetadata(optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.getMetadata === 'object' &&\n            this.methods.getMetadata) ||\n            {};\n        const reqOpts = extend(true, {\n            uri: '',\n        }, methodConfig.reqOpts, {\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n            this.metadata = body;\n            callback(err, this.metadata, res);\n        });\n    }\n    setMetadata(metadata, optionsOrCallback, cb) {\n        const [options, callback] = util_1.util.maybeOptionsOrCallback(optionsOrCallback, cb);\n        const methodConfig = (typeof this.methods.setMetadata === 'object' &&\n            this.methods.setMetadata) ||\n            {};\n        const reqOpts = extend(true, {}, {\n            method: 'PATCH',\n            uri: '',\n        }, methodConfig.reqOpts, {\n            json: metadata,\n            qs: options,\n        });\n        // The `request` method may have been overridden to hold any special\n        // behavior. Ensure we call the original `request` method.\n        ServiceObject.prototype.request.call(this, reqOpts, (err, body, res) => {\n            this.metadata = body;\n            callback(err, this.metadata, res);\n        });\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts);\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl, this.id || '', reqOpts.uri];\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .filter(x => x.trim()) // Limit to non-empty strings.\n            .map(uriComponent => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/');\n        const childInterceptors = arrify(reqOpts.interceptors_);\n        const localInterceptors = [].slice.call(this.interceptors);\n        reqOpts.interceptors_ = childInterceptors.concat(localInterceptors);\n        if (reqOpts.shouldReturnStream) {\n            return this.parent.requestStream(reqOpts);\n        }\n        this.parent.request(reqOpts, callback);\n    }\n    request(reqOpts, callback) {\n        this.request_(reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return this.request_(opts);\n    }\n}\nexports.ServiceObject = ServiceObject;\npromisify_1.promisifyAll(ServiceObject);\n//# sourceMappingURL=service-object.js.map"]},"metadata":{},"sourceType":"script"}